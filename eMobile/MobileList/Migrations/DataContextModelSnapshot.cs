// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileList.Data;

namespace MobileList.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MobileList.Models.Manufacturer.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("MobileList.Models.Mobile.Mobile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ManufacturerId");

                    b.Property<string>("Memory");

                    b.Property<string>("Name");

                    b.Property<string>("OperatingSystem");

                    b.Property<decimal>("Price");

                    b.Property<string>("Processor");

                    b.Property<string>("Resolution");

                    b.Property<string>("Size");

                    b.Property<decimal>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Mobiles");
                });

            modelBuilder.Entity("MobileList.Models.Mobile.MobileImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MobileId");

                    b.Property<string>("Src");

                    b.HasKey("Id");

                    b.HasIndex("MobileId");

                    b.ToTable("MobileImages");
                });

            modelBuilder.Entity("MobileList.Models.Mobile.MobileThumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MobileId");

                    b.Property<string>("Src");

                    b.HasKey("Id");

                    b.HasIndex("MobileId")
                        .IsUnique();

                    b.ToTable("MobileThumbnail");
                });

            modelBuilder.Entity("MobileList.Models.Mobile.MobileVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MobileId");

                    b.Property<string>("Src");

                    b.Property<string>("ThumbnailSrc");

                    b.HasKey("Id");

                    b.HasIndex("MobileId");

                    b.ToTable("MobileVideos");
                });

            modelBuilder.Entity("MobileList.Models.Mobile.Mobile", b =>
                {
                    b.HasOne("MobileList.Models.Manufacturer.Manufacturer", "Manufacturer")
                        .WithMany("Mobiles")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("MobileList.Models.Mobile.MobileImage", b =>
                {
                    b.HasOne("MobileList.Models.Mobile.Mobile", "Mobile")
                        .WithMany("MobileImages")
                        .HasForeignKey("MobileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobileList.Models.Mobile.MobileThumbnail", b =>
                {
                    b.HasOne("MobileList.Models.Mobile.Mobile", "Mobile")
                        .WithOne("MobileThumbnail")
                        .HasForeignKey("MobileList.Models.Mobile.MobileThumbnail", "MobileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MobileList.Models.Mobile.MobileVideo", b =>
                {
                    b.HasOne("MobileList.Models.Mobile.Mobile", "Mobile")
                        .WithMany("MobileVideos")
                        .HasForeignKey("MobileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
